apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: expense
  # labels of deployment resource
  labels:
    app: frontend 
    tier: web
    purpose: expense
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend 
      tier: web
      purpose: expense
  template:
    metadata:
      labels:
        app: frontend 
        tier: web
        purpose: expense  
    spec:
      containers:
      - name: frontend
        image: rakeshreddy07/frontend:1.2.0
        ports:
        - containerPort: 8080
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: frontend 
#   namespace: expense
# spec: 
#   type: LoadBalancer
#   selector:
#     app: frontend 
#     tier: web
#     purpose: expense  
#   ports:
#   - protocol: TCP
#     port: 80 #service port
#     targetPort: 8080
---
kind: Service
apiVersion: v1 
metadata:
  name: frontend   
  namespace: expense
spec:
  selector:
    app: frontend 
    tier: web
    purpose: expense  
  ports: 
  - protocol: TCP 
    port: 80
    targetPort: 8080 

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frotnend 
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:361769572747:certificate/b9e0d09c-69a9-4ad2-b20e-9a631b15e4b6
    alb.ingress.kubernetes.io/group.name: joindevops
spec:
  ingressClassName: alb
  rules:
  - host: "expense.devopsaws82s.online"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: frontend
            port:
              number: 8080